id: '16938240225340.09934268915888333'
definitionId: customComponent
parentSlotId: '2'
styles:
  xl:
    gridItem:
      x: 0
      y: 13
      w: 16
      h: 141
  xs:
    gridItem:
      x: 0
      y: 295
      w: 24
      h: 30
properties:
  data: |-
    {
      action: 'load',
      data: {{actions.loadApartments.data}},
    }
  template: "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Display a popup on hover</title>\n    <meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\" />\n    <link href=\"https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css\" rel=\"stylesheet\" />\n    <script src=\"https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js\"></script>\n    <style>\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n      }\n    </style>\n  </head>\n  <body>\n    <style>\n      .mapboxgl-popup {\n        max-width: 400px;\n        font: 12px/20px \"Helvetica Neue\", Arial, Helvetica, sans-serif;\n      }\n    </style>\n    <div id=\"map\"></div>\n    <script>\n\n      UB.onData(({ action, data }) => {\n        if (action === 'select') {\n          console.log('data from UIB', action, data);\n        \tmap.flyTo({\n          \tcenter: [data.longitude, data.latitude]\n          });\n          return;\n        }\n        \n        setTimeout(() => {\n          const features = data.map(i => ({\n            type: \"Feature\",\n            properties: { ...i },\n            geometry: {\n              type: \"Point\",\n              coordinates: [i.longitude, i.latitude],\n            },\n          }));\n          \n          map.getSource(\"places\").setData({\n            type: \"FeatureCollection\",\n            features,\n          });\n          \n          map.flyTo({\n          \tcenter: features[0].geometry.coordinates\n          });\n        }, 1000);\n      });\n\n      mapboxgl.accessToken = \"pk.eyJ1Ijoia2Rhbm92c2t5IiwiYSI6ImNqa2U2cTdoYjBpbzEzcHQ2MXI3NDR1emkifQ.3qh59jMJ6jK1Xc8kFnH9Pw\";\n      const map = new mapboxgl.Map({\n        container: \"map\",\n        // Choose from Mapbox's core styles, or make your own style with Mapbox Studio\n        style: \"mapbox://styles/mapbox/streets-v12\",\n        center: [82.1055, -42.87],\n        zoom: 5,\n      });\n\n      map.on(\"load\", () => {\n        map.addSource(\"places\", {\n          type: \"geojson\",\n          data: { type: \"FeatureCollection\", features: [] },\n        });\n        // Add a layer showing the places.\n        map.addLayer({\n          id: \"places\",\n          type: \"circle\",\n          source: \"places\",\n          paint: {\n            \"circle-color\": \"#4264fb\",\n            \"circle-radius\": 6,\n            \"circle-stroke-width\": 2,\n            \"circle-stroke-color\": \"#ffffff\",\n          },\n        });\n\n        // Create a popup, but don't add it to the map yet.\n        const popup = new mapboxgl.Popup({\n          closeButton: false,\n          closeOnClick: false,\n        });\n\n        map.on(\"mouseenter\", \"places\", (e) => {\n          // Change the cursor style as a UI indicator.\n          map.getCanvas().style.cursor = \"pointer\";\n\n          // Copy coordinates array.\n          const coordinates = e.features[0].geometry.coordinates.slice();\n          const description = e.features[0].properties.name;\n\n          // Ensure that if the map is zoomed out such that multiple\n          // copies of the feature are visible, the popup appears\n          // over the copy being pointed to.\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          }\n\n          // Populate the popup and set its coordinates\n          // based on the feature found.\n          popup.setLngLat(coordinates).setHTML(description).addTo(map);\n        });\n\n        map.on(\"mouseleave\", \"places\", () => {\n          map.getCanvas().style.cursor = \"\";\n          popup.remove();\n        });\n\n        map.on(\"click\", \"places\", (e) => {\n          const point = e.features[0].properties;\n          UB.triggerEvent(point);\n        });\n      });\n    </script>\n  </body>\n</html>"
  name: map
  __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
    - xl
    - xs
actions:
  triggerEvent:
    - action: '16373232387810.7469491446313601'
      paramCode: ''
      blockPageLoad: false
      index: 0
index: 2
slots: []
